// html 
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Color Generator</title>
</head>
<body>

    <h1>Random Color Generator for Motorcycle</h1>
    
    <div id="motorcycle"></div>
    
    <label for="colorSelect">Choose a color:</label>
    <select id="colorSelect">
        <option value="">--Select a color--</option>
        <option value="blue">Blue</option>
        <option value="grey">Grey</option>
        <option value="green">Green</option>
        <option value="yellow">Yellow</option>
        <option value="lightblue">Light Blue</option>
        <option value="black">Black</option>
    </select>
    
    <br><br>
    
    <button id="randomColorBtn">Generate Random Color</button>
    <button id="resetBtn">Reset Color</button>

    <script src="script.js"></script>
</body>
</html>

// css
 body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 20px;
        }
        #motorcycle {
            width: 300px;
            height: 200px;
            background-color: white;
            margin: 20px auto;
            border: 2px solid black;
        }
// javascript
document.addEventListener('DOMContentLoaded', () => {
    const motorcycleDiv = document.getElementById('motorcycle');
    const colorSelect = document.getElementById('colorSelect');
    const randomColorBtn = document.getElementById('randomColorBtn');
    const resetBtn = document.getElementById('resetBtn');

    // Function to generate a random RGB color
    function getRandomColor() {
        const r = Math.floor(Math.random() * 256);
        const g = Math.floor(Math.random() * 256);
        const b = Math.floor(Math.random() * 256);
        return `rgb(${r}, ${g}, ${b})`;
    }

    // Event listener for random color button
    randomColorBtn.addEventListener('click', () => {
        motorcycleDiv.style.backgroundColor = getRandomColor();
    });

    // Event listener for dropdown menu
    colorSelect.addEventListener('change', (event) => {
        motorcycleDiv.style.backgroundColor = event.target.value;
    });

    // Event listener for reset button
    resetBtn.addEventListener('click', () => {
        motorcycleDiv.style.backgroundColor = 'white';
        colorSelect.selectedIndex = 0; // Reset dropdown selection
    });
});